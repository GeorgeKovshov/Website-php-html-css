*{
	box-sizing: border-box;
	padding: 0;
	margin: 0;
	
}

body {
	font-family: 'Open Sans', sans-serif;
	font-size: 16px;
	line-height: 1.5;
	color: #333;
	background: #f5f5f5;
	
	
}

.container{
	background-color: #AAA;
	max-width: 960px;
	margin: 100px auto;
	padding: 100px;
	
	#display: flex;
	display: grid;
	
	/*grid-template-columns: 30% 40% 30%; #you can use percentage to define columns;*/
	/*grid-template-columns: 1fr 2fr;  #fr is a fraction - its relative, so here second column is like two firsts.*/
	/*grid-template-columns: repeat(3, 1fr);*/
	grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* this makes the items wrap when they get smaller than 200 pixels */
	/*column-gap: 10px;
	row-gap: 10px;*/
	gap: 10px; /*#combines previous two */
	
	/*grid-auto-rows: minmax(100px, auto);*/
	/*grid-template-rows: repeat(3, 1fr); #the size of each row is determined based on which row has most content*/
	
	/* align-items aligns items vertically */
	/*align-items: stretch; streches rows and columns to fit everything */
	/*align-items: start; each div only wraps around content, not stretching anything */
	/*align-items: center; not stretched, but positioned right in center of the stretched other item */
	/*align-items: end; not stretched, but aligned at the bottom */
	
	/* grid-template-columns: repeat(3, 100px); to see what justify-content does */
	
	/*justify-content: space-around;  it aligns items horizontally. You can use: start, center, end, space-around (evenly spread columns without stretching)   */
	
	
}
.item {
	background: steelblue;
	color:#fff;
	font-size: 20px;
	padding: 20px;
	border: skyblue 1px solid;
}


/* @media here does this: when the browser window gets resized to 500 pixels, it changes the container properties to the grid-template-columns: 1fr; */
/*
@media(max-width: 500px){
	.container {
		grid-template-columns: 1fr;
		
	}	
}*/

/*
.item:nth-of-type(2) { allows to pseudo-select a particular item from the container
	height: 100px;
	width: 100px;
	
	align-self: end;  you can align individual objects like this  
	justify-self: center;
	
}*/

.item:nth-of-type(1) { 
	background: #000;
	/*grid-column-start: 1;
	grid-column-end: 3; defines how much a given item spans in the grid*/
	/*grid-column: 1 /3;  the same as the previous two lines, but condenced into one */
	 /*grid-column: 1 / span 2;  another way of writing the same thing */
}

.item:nth-of-type(3) { 
	background: #333;
	/*grid-row-start: 1;
	grid-row-end: 3; defines how much a given item spans in the grid*/
	/*grid-row: 2 /4;  the same as the previous two lines, but condenced into one */
	/* grid-row: 1 / span 2;  another way of writing the same thing*/
	
}








